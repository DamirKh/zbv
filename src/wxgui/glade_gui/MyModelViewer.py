# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.2 on Thu May 17 21:12:30 2018
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyModelViewer(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyModelViewer.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE | wx.FULL_REPAINT_ON_RESIZE | wx.RESIZE_BORDER | wx.STAY_ON_TOP
        wx.Dialog.__init__(self, *args, **kwds)
        self.bitmap_2 = wx.StaticBitmap(self, wx.ID_ANY, wx.Bitmap("/home/damir/PycharmProjects/zbv/src/wxgui/glade_gui/sinus.jpeg", wx.BITMAP_TYPE_ANY), style=wx.FULL_REPAINT_ON_RESIZE)
        self.button_1 = wx.Button(self, wx.ID_CLOSE, "", style=wx.BU_AUTODRAW)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.on_close_btn, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyModelViewer.__set_properties
        self.SetTitle(_("Model view"))
        self.button_1.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyModelViewer.__do_layout
        sizer_12 = wx.BoxSizer(wx.VERTICAL)
        sizer_12.Add(self.bitmap_2, 1, wx.ALL | wx.EXPAND, 10)
        sizer_12.Add(self.button_1, 0, wx.ALIGN_RIGHT | wx.ALL, 5)
        self.SetSizer(sizer_12)
        sizer_12.Fit(self)
        self.Layout()
        # end wxGlade

    def on_close_btn(self, event):  # wxGlade: MyModelViewer.<event_handler>
        print("Event handler 'on_close_btn' not implemented!")
        event.Skip()

# end of class MyModelViewer
